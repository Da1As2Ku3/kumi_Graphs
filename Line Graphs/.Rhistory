library(plyr)
summ_cab<-ddply(cabbages, c("Cult", "Date"), summarise, Weight = mean(HeadWt),
VitC = mean(VitC))
DT::datatable(summ_cab,options=list(pageLength=10))
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
library(DT)
library(MASS) # For the data set
library(plyr)
summ_cab<-ddply(cabbages, c("Cult", "Date"), summarise,
Weight = mean(HeadWt),
sd = sd(HeadWt),
n = length(HeadWt))
DT::datatable(summ_cab,options=list(pageLength=10))
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
library(DT)
library(MASS) # For the data set
library(plyr)
summ_cab<-ddply(cabbages, c("Cult", "Date"), summarise,
Weight = mean(HeadWt),
sd = sd(HeadWt),
n = length(HeadWt))
DT::datatable(summ_cab,options=list(pageLength=10))
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
library(DT)
library(MASS) # For the data set
library(plyr)
ddply(c1, c("Cult", "Date"), summarise,
Weight = mean(HeadWt, na.rm=TRUE),
sd = sd(HeadWt, na.rm=TRUE),
n = sum(!is.na(HeadWt)))
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
library(DT)
library(MASS) # For the data set
library(plyr)
c1 <- cabbages # Make a copy
ddply(c1, c("Cult", "Date"), summarise,
Weight = mean(HeadWt, na.rm=TRUE),
sd = sd(HeadWt, na.rm=TRUE),
n = sum(!is.na(HeadWt)))
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
library(DT)
library(MASS) # For the data set
library(plyr)
c1 <- cabbages # Make a copy
c1$HeadWt[c(1,20,45)] <- NA # Set some values to NA
ddply(c1, c("Cult", "Date"), summarise,
Weight = mean(HeadWt),
sd = sd(HeadWt),
n = length(HeadWt))
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
library(DT)
library(MASS) # For the data set
library(plyr)
# Copy cabbages and remove all rows with both c52 and d21
c2 <- subset(c1, !( Cult=="c52" & Date=="d21" ) )
c2a <- ddply(c2, c("Cult", "Date"), summarise,
Weight = mean(HeadWt, na.rm=TRUE),
sd = sd(HeadWt, na.rm=TRUE),
n = sum(!is.na(HeadWt)))
c2a
# Make the graph
ggplot(c2a, aes(x=Date, fill=Cult, y=Weight)) + geom_bar(position="dodge")
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
library(DT)
library(MASS) # For the data set
library(plyr)
# Copy cabbages and remove all rows with both c52 and d21
c2 <- subset(c1, !( Cult=="c52" & Date=="d21" ) )
c2a <- ddply(c2, c("Cult", "Date"), summarise,
Weight = mean(HeadWt, na.rm=TRUE),
sd = sd(HeadWt, na.rm=TRUE),
n = sum(!is.na(HeadWt)))
c2a
# Make the graph
ggplot(c2a, aes(x=Date, fill=Cult, y=Weight)) + geom_bar(stat="identity",position="dodge")
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
library(DT)
library(MASS) # For the data set
library(plyr)
c2b <- ddply(c2, c("Cult", "Date"), .drop=FALSE, summarise,
Weight = mean(HeadWt, na.rm=TRUE),
sd = sd(HeadWt, na.rm=TRUE),
n = sum(!is.na(HeadWt)))
c2b
# Make the graph
ggplot(c2b, aes(x=Date, fill=Cult, y=Weight)) + geom_bar(stat="identity",position="dodge")
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
library(DT)
library(MASS) # For the data set
library(plyr)
ca <- ddply(cabbages, c("Cult", "Date"), summarise,
Weight = mean(HeadWt, na.rm=TRUE),
sd = sd(HeadWt, na.rm=TRUE),
n = sum(!is.na(HeadWt)),
se = sd/sqrt(n))
#apply DT
DT::datatable(ca,options=list(pageLength=10))
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
library(DT)
library(MASS) # For the data set
library(plyr)
ddply(cabbages, c("Cult", "Date"), summarise,
Weight = mean(HeadWt, na.rm=TRUE),
sd = sd(HeadWt, na.rm=TRUE),
n = sum(!is.na(HeadWt)),
se = sd / sqrtn)
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
library(DT)
library(MASS) # For the data set
library(plyr)
ddply(cabbages, c("Cult", "Date"), summarise,
Weight = mean(HeadWt, na.rm=TRUE),
sd = sd(HeadWt, na.rm=TRUE),
n = sum(!is.na(HeadWt)),
se = sd / sqrt(n))
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
library(DT)
library(MASS) # For the data set
library(plyr)
ciMult <- qt(.975, ca$n-1)
ciMult
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
library(DT)
library(MASS) # For the data set
library(plyr)
ca$ci <- ca$se * ciMult
#We could have done this all in one line, like this:
ca$ci95 <- ca$se * qt(.975, ca$n)
#For a 99% confidence interval, use .995.
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
library(DT)
library(MASS) # For the data set
library(plyr)
ca$ci <- ca$se * ciMult
ca$ci
#We could have done this all in one line, like this:
ca$ci95 <- ca$se * qt(.975, ca$n)
ca$ci95
#For a 99% confidence interval, use .995.
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
library(DT)
library(MASS) # For the data set
library(plyr)
summarySE <- function(data=NULL, measurevar, groupvars=NULL,
conf.interval=.95, na.rm=FALSE, .drop=TRUE) {
require(plyr)
# New version of length that can handle NAs: if na.rm==T, don't count them
length2 <- function (x, na.rm=FALSE) {
if (na.rm) sum(!is.na(x))
else length(x)
}
# This does the summary
datac <- ddply(data, groupvars, .drop=.drop,
.fun = function(xx, col, na.rm) {
c( n = length2(xx[,col], na.rm=na.rm),
mean = mean (xx[,col], na.rm=na.rm),
sd = sd (xx[,col], na.rm=na.rm)
)
},
measurevar,
na.rm
)}
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
library(DT)
library(MASS) # For the data set
library(plyr)
summarySE <- function(data=NULL, measurevar, groupvars=NULL,
conf.interval=.95, na.rm=FALSE, .drop=TRUE) {
require(plyr)
# New version of length that can handle NAs: if na.rm==T, don't count them
length2 <- function (x, na.rm=FALSE) {
if (na.rm) sum(!is.na(x))
else length(x)
}
# This does the summary
datac <- ddply(data, groupvars, .drop=.drop,
.fun = function(xx, col, na.rm) {
c( n = length2(xx[,col], na.rm=na.rm),
mean = mean (xx[,col], na.rm=na.rm),
sd = sd (xx[,col], na.rm=na.rm)
)
},
measurevar,
na.rm
)
# Rename the "mean" column
datac <- rename(datac, c("mean" = measurevar))
datac$se <- datac$sd / sqrt(datac$n) # Calculate standard error of the mean
ciMult <- qt(conf.interval/2 + .5, datac$n-1)
datac$ci <- datac$se * ciMult
return(datac)
}
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
library(DT)
library(MASS) # For the data set
library(plyr)
# Remove all rows with both c52 and d21
c2 <- subset(cabbages, !( Cult=="c52" & Date=="d21" ) )
# Set some values to NA
c2$HeadWt[c(1,20,45)] <- NA
summarySE(c2, "HeadWt", c("Cult", "Date"), conf.interval=.99,
na.rm=TRUE, .drop=FALSE)
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
library(DT)
library(MASS) # For the data set
library(plyr)
# Remove all rows with both c52 and d21
c2 <- subset(cabbages, !( Cult=="c52" & Date=="d21" ) )
# Set some values to NA
c2$HeadWt[c(1,20,45)] <- NA
summarySE(c2, "HeadWt", c("Cult", "Date"), conf.interval=.99,
na.rm=TRUE, .drop=FALSE)
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
library(DT)
library(plyr)
data(anthoming)
head(anthoming)
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
library(DT)
library(plyr)
data(anthoming)
library(reshape2)
melt(anthoming, id.vars="angle", variable.name="condition", value.name="count")
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
library(DT)
library(plyr)
data(anthoming)
library(reshape2)
melt(anthoming, id.vars="angle", variable.name="condition", value.name="count")
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
library(DT)
library(plyr)
data(drunk)
head(drunk)
melt(drunk, id.vars="sex", measure.vars=c("0-29", "30-39"),
variable.name="age", value.name="count")
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
library(DT)
library(plyr)
data(drunk)
head(drunk)
melt(drunk, id.vars="sex", measure.vars=c("0-29", "30-39"),
variable.name="age", value.name="count")
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
library(DT)
library(plyr)
data(drunk)
head(plum_wide)
melt(plum_wide, id.vars=c("length","time"), variable.name="survival",
value.name="count")
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
library(DT)
library(plyr)
# Make a copy of the data
co <- corneas
co
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
library(DT)
library(plyr)
# Make a copy of the data
co <- corneas
co
# Add an ID column
co$id <- 1:nrow(co)
melt(co, id.vars="id", variable.name="eye", value.name="thickness")
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
library(DT)
library(plyr)
data(plum)
head(plum)
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
library(DT)
library(plyr)
data(plum)
library(reshape2)
dcast(plum, length + time ~ survival, value.var="count")
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
library(DT)
library(plyr)
data(plum)
dcast(plum, time ~ length + survival, value.var="count")
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
library(DT)
library(plyr)
data(nhtemp)
head(nhtemp)
# Put them in a data frame
nht <- data.frame(year=as.numeric(time(nhtemp)), temp=as.numeric(nhtemp))
nht
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
library(DT)
library(plyr)
data(presidents)
head(presidents)
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
library(DT)
library(plyr)
data(presidents)
head(presidents)
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
library(DT)
library(plyr)
data(presidents)
pres_rating <- data.frame(
year = as.numeric(time(presidents)),rating = as.numeric(presidents)
)
pres_rating
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
library(DT)
library(plyr)
pres_rating2 <- data.frame(
year = as.numeric(floor(time(presidents))),
quarter = as.numeric(cycle(presidents)),
rating = as.numeric(presidents)
)
pres_rating2
library(datasets)
library(ggplot2)
library(plotly)
# calculate percentages of each cyl & am category
proportion <- mtcars %>%
group_by(cyl, am) %>%
tally() %>%
group_by(cyl) %>%
mutate(pct = n / sum(n))
library(datasets)
library(ggplot2)
library(plotly)
library(dplyr)
library(plyr)
# calculate percentages of each cyl & am category
proportion <- mtcars %>%
group_by(cyl, am) %>%
tally() %>%
group_by(cyl) %>%
mutate(pct = n / sum(n))
proportion
# create proportional stacked bars
g<-ggplot(proportion, aes(factor(cyl), pct, fill = factor(am, levels = c(1, 0)))) +
geom_bar(stat = "identity", color = "grey40") +
scale_fill_manual(values = c("#a1d99b", "#31a354")) +
labs(fill = "AM")
ggplotly(g)
set.seed(1)
d <- data.frame(year = rep(2000:2002, each = 3),
count = round(runif(9, 0, 20)))
print(d)
library(plyr)
ddply(d, "year", function(x) {
mean.count <- mean(x$count)
sd.count <- sd(x$count)
cv <- sd.count/mean.count
data.frame(cv.count = cv)
})
ddply(d, "year", summarise, mean.count = mean(count))
ddply(d, "year", summarise, mean.count = mean(count))
ddply(d, "year", transform, total.count = sum(count))
ddply(d, "year", mutate, mu = mean(count), sigma = sd(count),
cv = sigma/mu)
par(mfrow = c(1, 3), mar = c(2, 2, 1, 1), oma = c(3, 3, 0, 0))
d_ply(d, "year", transform, plot(count, main = unique(year), type = "o"))
mtext("count", side = 1, outer = TRUE, line = 1)
mtext("frequency", side = 2, outer = TRUE, line = 1)
baseball.dat <- subset(baseball, year > 2000) # data from the plyr package
x <- ddply(baseball.dat, c("year", "team"), summarize,
homeruns = sum(hr))
head(x)
f <- function(x) if (x == 1) stop("Error!") else 1
safe.f <- failwith(NA, f, quiet = TRUE)
# llply(1:2, f)
llply(1:2, safe.f)
x <- c(1:10)
wait <- function(i) Sys.sleep(0.1)
system.time(llply(x, wait))
system.time(sapply(x, wait))
library(doParallel)
