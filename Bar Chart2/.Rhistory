library(ggplot2)
library(plotly)
library(plyr) # needed for desc()
library(gridExtra)
data(cabbage_exp)
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar))+geom_bar(stat="identity",position="dodge")+
geom_text(aes(label=Weight),vjust=1.5,color="white",position=position_dodge(0.9),size=3)
library(gcookbook)
library(ggplot2)
library(plotly)
library(plyr) # needed for desc()
library(gridExtra)
data(cabbage_exp)
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar))+geom_bar(stat="identity",position="dodge")+
geom_text(aes(label=Weight),vjust=1.5,color="white",position=position_dodge(0.9),size=5)
library(gcookbook)
library(ggplot2)
library(plotly)
library(plyr) # needed for desc()
library(gridExtra)
data(cabbage_exp)
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar))+geom_bar(stat="identity",position="dodge")+
geom_text(aes(label=Weight),vjust=1.5,color="white",position=position_dodge(0.9),size=4)
library(gcookbook)
library(ggplot2)
library(plotly)
library(plyr) # needed for desc()
library(gridExtra)
data(cabbage_exp)
#sort the data
ce<-arrange(cabbage_exp,Date,Cultivar)
#get the cumulative sum
ce<-ddply(ce,"Date",transform,label_y=cumsum(Weight))
ce
library(gcookbook)
library(ggplot2)
library(plotly)
library(plyr) # needed for desc()
library(gridExtra)
data(cabbage_exp)
#sort the data
ce<-arrange(cabbage_exp,Date,Cultivar)
#get the cumulative sum
ce<-ddply(ce,"Date",transform,label_y=cumsum(Weight))
ce
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar))+geom_bar(stat="identity")+geom_text(aes(y=label_y,
label=Weight),vjust=1.5,color="white")
#placing the label in the middle of each stacked bar
ce<-arrange(cabbage_exp,Date,Cultivar)
#calculate y position placing it in the middle
ce<-ddply(ce,"Date",transform,label_y=cumsum(Weight)-0.5*Weight)
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar))+geom_bar(stat="identity")+
geom_text(aes(y=label_y,label=Weight),color="white")
library(gcookbook)
library(ggplot2)
library(plotly)
library(plyr) # needed for desc()
library(gridExtra)
data(cabbage_exp)
#sort the data
ce<-arrange(cabbage_exp,Date,Cultivar)
#get the cumulative sum
ce<-ddply(ce,"Date",transform,label_y=cumsum(Weight))
ce
g1<-ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar))+geom_bar(stat="identity")+geom_text(aes(y=label_y,
label=Weight),vjust=1.5,color="white")
#placing the label in the middle of each stacked bar
ce<-arrange(cabbage_exp,Date,Cultivar)
#calculate y position placing it in the middle
ce<-ddply(ce,"Date",transform,label_y=cumsum(Weight)-0.5*Weight)
g2<-ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar))+geom_bar(stat="identity")+
geom_text(aes(y=label_y,label=Weight),color="white")
grid.arrange(g1,g2,ncol=2)
library(gcookbook)
library(ggplot2)
library(plotly)
library(plyr) # needed for desc()
library(gridExtra)
data(cabbage_exp)
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar))+geom_bar(stat="identity",color="black")+
geom_text(aes(y=label_y,label=paste(format(Weight,nsmall=2),"kg")),size=4)+
guides=fill=guide_legend(reverse=TRUE)+scale_fill_browser(palette="Paste1")
library(gcookbook)
library(ggplot2)
library(plotly)
library(plyr) # needed for desc()
library(gridExtra)
data(cabbage_exp)
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar))+geom_bar(stat="identity",color="black")+
geom_text(aes(y=label_y,label=paste(format(Weight,nsmall=2),"kg")),size=4)+
guides=fill=guide_legend(reverse=TRUE)+scale_fill_brewer(palette="Paste1")
library(gcookbook)
library(ggplot2)
library(plotly)
library(plyr) # needed for desc()
library(gridExtra)
data(cabbage_exp)
#placing the label in the middle of each stacked bar
ce<-arrange(cabbage_exp,Date,Cultivar)
#calculate y position placing it in the middle
ce<-ddply(ce,"Date",transform,label_y=cumsum(Weight)-0.5*Weight)
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar))+geom_bar(stat="identity",color="black")+
geom_text(aes(y=label_y,label=paste(format(Weight,nsmall=2),"kg")),size=4)+
guides=fill=guide_legend(reverse=TRUE)+scale_fill_brewer(palette="Paste1")
library(gcookbook)
library(ggplot2)
library(plotly)
library(plyr) # needed for desc()
library(gridExtra)
data(cabbage_exp)
#placing the label in the middle of each stacked bar
ce<-arrange(cabbage_exp,Date,Cultivar)
#calculate y position placing it in the middle
ce<-ddply(ce,"Date",transform,label_y=cumsum(Weight)-0.5*Weight)
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar))+geom_bar(stat="identity",color="black")+
geom_text(aes(y=label_y,label=paste(format(Weight,nsmall=2),"kg")),size=4)+
guides(fill=guide_legend(reverse=TRUE))+scale_fill_brewer(palette="Paste1")
library(datasets)
library(ggplot2)
library(plotly)
data(diamonds)
g<-ggplot(diamonds,aes(x=cut,fill=cut))+ geom_bar()+xlab("Cut")+ylab("Count")+
ggtitle("Barplot showing count/frequency of cut ")+geom_text(stat="count",aes(label=..count..),
vjust=-0.5)
ggplotly(g)
library(datasets)
library(ggplot2)
library(plotly)
data(diamonds)
g<-ggplot(diamonds,aes(x=cut,fill=cut))+ geom_bar()+xlab("Cut")+ylab("Count")+
ggtitle("Barplot showing count/frequency of cut ")+geom_text(stat="count",aes(label=..count..),
vjust=-0.2)
ggplotly(g)
library(datasets)
library(ggplot2)
library(plotly)
data(diamonds)
g<-ggplot(diamonds,aes(x=cut,fill=cut))+ geom_bar()+xlab("Cut")+ylab("Count")+
ggtitle("Barplot showing count/frequency of cut ")+geom_text(stat="count",aes(label=..count..),
vjust=-0.1)
ggplotly(g)
library(datasets)
library(ggplot2)
library(plotly)
data(diamonds)
g<-ggplot(diamonds,aes(x=cut,fill=cut))+ geom_bar()+xlab("Cut")+ylab("Count")+
ggtitle("Barplot showing count/frequency of cut ")+geom_text(stat="count",aes(label=..count..),
vjust=-0.1)+ylim(0,max(diamonds$count)*1.05)
ggplotly(g)
library(datasets)
library(ggplot2)
library(plotly)
data(diamonds)
summary(diamonds)
g<-ggplot(diamonds,aes(x=cut,fill=cut))+ geom_bar()+xlab("Cut")+ylab("Count")+
ggtitle("Barplot showing count/frequency of cut ")+geom_text(stat="count",aes(label=..count..),
vjust=-0.1)+ylim(0,max(diamonds$count)*1.05)
ggplotly(g)
library(datasets)
library(ggplot2)
library(plotly)
data(diamonds)
g<-ggplot(diamonds,aes(x=cut,fill=cut))+ geom_bar()+xlab("Cut")+ylab("Count")+
ggtitle("Barplot showing count/frequency of cut ")+geom_text(stat="count",aes(label=..count..),
vjust=-0.1)+ylim(0,22,000)
library(datasets)
library(ggplot2)
library(plotly)
data(diamonds)
g<-ggplot(diamonds,aes(x=cut,fill=cut))+ geom_bar()+xlab("Cut")+ylab("Count")+
ggtitle("Barplot showing count/frequency of cut ")+geom_text(stat="count",aes(label=..count..),
vjust=-0.1)+ylim(0,21551)
ggplotly(g)
library(datasets)
library(ggplot2)
library(plotly)
data(diamonds)
g<-ggplot(diamonds,aes(x=cut,fill=cut))+ geom_bar()+xlab("Cut")+ylab("Count")+
ggtitle("Barplot showing count/frequency of cut ")+geom_text(stat="count",aes(label=..count..),
vjust=-0.1)+ylim(0,21600)
ggplotly(g)
library(datasets)
library(ggplot2)
library(plotly)
data(diamonds)
g<-ggplot(diamonds,aes(x=cut,fill=cut))+ geom_bar()+xlab("Cut")+ylab("Count")+
ggtitle("Barplot showing count/frequency of cut ")+geom_text(stat="count",aes(label=..count..),
vjust=-0.1)+ylim(0,21700)
ggplotly(g)
library(datasets)
library(ggplot2)
library(plotly)
data(diamonds)
g<-ggplot(diamonds,aes(x=cut,fill=cut))+ geom_bar()+xlab("Cut")+ylab("Count")+
ggtitle("Barplot showing count/frequency of cut ")+geom_text(stat="count",aes(label=..count..),
vjust=-0.2)+ylim(0,21700)
ggplotly(g)
library(datasets)
library(ggplot2)
library(plotly)
data(diamonds)
g<-ggplot(diamonds,aes(x=cut,fill=cut))+ geom_bar()+xlab("Cut")+ylab("Count")+
ggtitle("Barplot showing count/frequency of cut ")+geom_text(stat="count",aes(label=..count..),
vjust=-0.3)+ylim(0,21700)
ggplotly(g)
library(datasets)
library(ggplot2)
library(plotly)
data(diamonds)
g<-ggplot(diamonds,aes(x=cut,fill=cut))+ geom_bar()+xlab("Cut")+ylab("Count")+
ggtitle("Barplot showing count/frequency of cut ")+geom_text(stat="count",aes(label=..count..),
vjust=-0.5)+ylim(0,21700)
ggplotly(g)
library(datasets)
library(ggplot2)
library(plotly)
data(diamonds)
g<-ggplot(diamonds,aes(x=cut,fill=cut))+ geom_bar()+xlab("Cut")+ylab("Count")+
ggtitle("Barplot showing count/frequency of cut ")+geom_text(stat="count",aes(label=..count..),
vjust=-0.5)+ylim(0,22000)
ggplotly(g)
library(datasets)
library(ggplot2)
library(plotly)
data(diamonds)
g<-ggplot(diamonds,aes(x=cut,fill=cut))+ geom_bar()+xlab("Cut")+ylab("Count")+
ggtitle("Barplot showing count/frequency of cut ")+geom_text(stat="count",aes(label=..count..),
vjust=-0.3)+ylim(0,22000)
ggplotly(g)
library(datasets)
library(ggplot2)
library(plotly)
data(diamonds)
g<-ggplot(diamonds,aes(x=cut,fill=cut))+ geom_bar()+xlab("Cut")+ylab("Count")+
ggtitle("Barplot showing count/frequency of cut ")+geom_text(stat="count",aes(label=..count..),
vjust=-0.2)+ylim(0,22000)
ggplotly(g)
library(datasets)
library(ggplot2)
library(plotly)
data(diamonds)
g<-ggplot(diamonds,aes(x=cut,fill=cut))+ geom_bar()+xlab("Cut")+ylab("Count")+
ggtitle("Barplot showing count/frequency of cut ")+geom_text(stat="count",aes(label=..count..),
vjust=-0.2)+ylim(0,max(diamonds$cut)*1.05)
ggplotly(g)
library(datasets)
library(ggplot2)
library(plotly)
data(diamonds)
g<-ggplot(diamonds,aes(x=cut,fill=cut))+ geom_bar()+xlab("Cut")+ylab("Count")+
ggtitle("Barplot showing count/frequency of cut ")+geom_text(stat="count",aes(label=..count..),
vjust=-0.3)+ylim(0,max(diamonds$cut)*1.05)
ggplotly(g)
library(datasets)
library(ggplot2)
library(plotly)
data(diamonds)
g<-ggplot(diamonds,aes(x=cut,fill=cut))+ geom_bar()+xlab("Cut")+ylab("Count")+
ggtitle("Barplot showing count/frequency of cut ")+geom_text(stat="count",aes(label=..count..),
vjust=-0.1)+ylim(0,max(diamonds$cut)*1.05)
ggplotly(g)
library(datasets)
library(ggplot2)
library(plotly)
data(diamonds)
g<-ggplot(diamonds,aes(x=cut,fill=cut))+ geom_bar()+xlab("Cut")+ylab("Count")+
ggtitle("Barplot showing count/frequency of cut ")+geom_text(stat="count",aes(label=..count..),
vjust=-0.1)+ylim(0,max(diamonds$cut)*1.1)
ggplotly(g)
library(datasets)
library(ggplot2)
library(plotly)
data(diamonds)
g<-ggplot(diamonds,aes(x=cut,fill=cut))+ geom_bar()+xlab("Cut")+ylab("Count")+
ggtitle("Barplot showing count/frequency of cut ")+geom_text(stat="count",aes(label=..count..),
vjust=-0.2)+ylim(0,max(diamonds$cut)*1.1)
ggplotly(g)
library(datasets)
library(ggplot2)
library(plotly)
data(diamonds)
g<-ggplot(diamonds,aes(x=cut,fill=cut))+ geom_bar()+xlab("Cut")+ylab("Count")+
ggtitle("Barplot showing count/frequency of cut ")+geom_text(stat="count",aes(label=..count..),
vjust=-0.2)+ylim(0,max(diamonds$cut)*1.07)
ggplotly(g)
library(datasets)
library(ggplot2)
library(plotly)
data(diamonds)
g<-ggplot(diamonds,aes(x=cut,fill=cut))+ geom_bar()+xlab("Cut")+ylab("Count")+
ggtitle("Barplot showing count/frequency of cut ")+geom_text(stat="count",aes(label=..count..),
vjust=-0.2)+ylim(0,max(diamonds$cut)*1.09)
ggplotly(g)
library(datasets)
library(ggplot2)
library(plotly)
data(diamonds)
g<-ggplot(diamonds,aes(x=cut,fill=cut))+ geom_bar()+xlab("Cut")+ylab("Count")+
ggtitle("Barplot showing count/frequency of cut ")+geom_text(stat="count",aes(label=..count..),
vjust=-0.2)
ggplotly(g)
library(datasets)
data(mtcars)
head(mtcars)
library(datasets)
data(mtcars)
head(mtcars)
#generate correlation matrix using cor
mt_cor<-cor(mtcars)
round(mt_cor,2)
install.packages("corrplot")
library(corrplot)
library(datasets)
data(mtcars)
head(mtcars)
mt_cor<-cor(mtcars)
round(mt_cor,2)
library(datasets)
library(corrplot)
data(mtcars)
corrplot(mtcars)
library(datasets)
library(corrplot)
data(mtcars)
corrplot(mt_cor)
library(datasets)
library(corrplot)
data(mtcars)
corrplot(mt_cor,method="shade",shade.col = NA,tl.col = "black",tl.srt = 45)
library(datasets)
library(corrplot)
data(mtcars)
# Generate a lighter palette
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
corrplot(mcor, method="shade", shade.col=NA, tl.col="black", tl.srt=45,
col=col(200), addCoef.col="black", addcolorlabel="no", order="AOE")
library(datasets)
library(corrplot)
data(mtcars)
# Generate a lighter palette
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
corrplot(mt_cor, method="shade", shade.col=NA, tl.col="black", tl.srt=45,
col=col(200), addCoef.col="black", addcolorlabel="no", order="AOE")
library(datasets)
library(corrplot)
data(mtcars)
# Generate a lighter palette
col <- c("lightblue","orange","pink","yellow","yellowgreen")
corrplot(mt_cor, method="shade", shade.col=NA, tl.col="black", tl.srt=45,
col=col(200), addCoef.col="black", addcolorlabel="no", order="AOE")
library(datasets)
library(corrplot)
data(mtcars)
# Generate a lighter palette
col <- color(c("lightblue","orange","pink","yellow","yellowgreen"))
library(datasets)
library(corrplot)
data(mtcars)
# Generate a lighter palette
colors <- c("lightblue","orange","pink","yellow","yellowgreen")
corrplot(mt_cor, method="shade", shade.col=NA, tl.col="black", tl.srt=45,
col=colors(200), addCoef.col="black", addcolorlabel="no", order="AOE")
library(datasets)
library(corrplot)
data(mtcars)
# Generate a lighter palette
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
corrplot(mt_cor, method="shade", shade.col=NA, tl.col="black", tl.srt=45,
col=col(200), addCoef.col="black", addcolorlabel="no", order="AOE")
library(datasets)
library(corrplot)
data(mtcars)
# Generate a lighter palette
colors <- c("lightblue","orange","pink","yellow","yellowgreen","white","red","maroon","fuchsia",
"aqua")
corrplot(mt_cor, method="shade", shade.col=NA, tl.col="black", tl.srt=45,
col=colors(200), addCoef.col="black", addcolorlabel="no", order="AOE")
library(datasets)
library(corrplot)
data(mtcars)
# Generate a lighter palette
colors <- c("lightblue","orange","pink","yellow","yellowgreen","white","red","maroon","fuchsia",
"aqua")
corrplot(mt_cor, method="shade", shade.col=NA, tl.col="red", tl.srt=45,
col=colors(200), addCoef.col="black", addcolorlabel="no", order="AOE")
library(datasets)
library(corrplot)
data(mtcars)
# Generate a lighter palette
colors <- c("lightblue","orange","pink","yellow","yellowgreen","white","red","maroon","fuchsia",
"aqua")
corrplot(mt_cor, method="shade", shade.col=NA, tl.col="red", tl.srt=45,
col=colors(200), addCoef.col="white", addcolorlabel="no", order="AOE")
library(datasets)
library(corrplot)
data(mtcars)
# Generate a lighter palette
colors <- c("lightblue","orange","pink","yellow","yellowgreen","white","red","maroon","fuchsia",
"aqua")
corrplot(mt_cor, method="shade", shade.col=NA, tl.col="black", tl.srt=45,
col=colors(200), addCoef.col="white", addcolorlabel="no", order="AOE")
library(datasets)
library(corrplot)
data(mtcars)
# Generate a lighter palette
colors <- c("lightblue","orange","pink","yellow","yellowgreen","white","red","maroon","fuchsia",
"aqua")
corrplot(mt_cor, method="shade", shade.col=NA, tl.col="black", tl.srt=45,
col=colors(200), addCoef.col="white", addcolorlabel="no", order="AOE")
library(datasets)
library(corrplot)
data(mtcars)
# Generate a lighter palette
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
corrplot(mt_cor, method="shade", shade.col=NA, tl.col="black", tl.srt=45,
col=col(200), addCoef.col="black", addcolorlabel="no", order="AOE")
library(datasets)
library(corrplot)
data(mtcars)
# Generate a lighter palette
colors <- c("lightblue","orange","pink","yellow","yellowgreen","white","red","maroon","fuchsia",
"aqua")
corrplot(mt_cor, method="ellipse", shade.col=NA, tl.col="black", tl.srt=45,
col=colors(200), addCoef.col="white", addcolorlabel="no", order="AOE")
library(datasets)
library(corrplot)
data(mtcars)
# Generate a lighter palette
colors <- c("lightblue","orange","pink","yellow","yellowgreen","white","red","maroon","fuchsia",
"aqua")
corrplot(mt_cor, method="ellipse", shade.col=NA, tl.col="black", tl.srt=45,
col=colors(200), addCoef.col="white", addcolorlabel="no", order="hclust")
library(datasets)
library(corrplot)
data(mtcars)
# Generate a lighter palette
colors <- c("lightblue","orange","pink","yellow","yellowgreen","white","red","maroon","fuchsia",
"aqua")
corrplot(mt_cor, method="shade", shade.col=NA, tl.col="black", tl.srt=45,
col=colors(200), addCoef.col="white", addcolorlabel="no", order="hclust")
install.packages("igraph")
library(igraph)
library(igraph)
# Specify edges for a directed graph
gd <- graph(c(1,2, 2,3, 2,4, 1,4, 5,5, 3,6))
plot(gd)
# For an undirected graph
gu <- graph(c(1,2, 2,3, 2,4, 1,4, 5,5, 3,6), directed=FALSE)
# No labels
plot(gu, vertex.label=NA)
install.packages("tinytex")
library(tinytex)
library(gcookbook)
library(ggplot2)
library(plotly)
data(cabbage_exp)
g<-ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar))+geom_bar(stat="identity")+xlab("Date")+
ylab("Weight")+ggtitle("Stacked bar graph of Date and Weight")
ggplotly(g)
library(gcookbook)
library(ggplot2)
library(plotly)
data(cabbage_exp)
g<-ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar))+geom_bar(stat="identity")+xlab("Date")+
ylab("Weight")+ggtitle("Stacked bar graph of Date and Weight")+geom_text(aes(label=Weight),
size=3,position=position_stack(vjust=0.5))
ggplotly(g)
library(datasets)
library(ggplot2)
library(plotly)
data(diamonds)
g<-ggplot(diamonds,aes(x=cut,fill=cut))+ geom_bar()+xlab("Cut")+ylab("Count")+
ggtitle("Barplot showing count/frequency of cut ")+geom_text(stat="count",aes(label=..count..),
vjust=-0.2)+ylim(0,max(diamonds$count)*1.05)
ggplotly(g)
library(datasets)
library(ggplot2)
library(plotly)
data(diamonds)
g<-ggplot(diamonds,aes(x=cut,fill=cut))+ geom_bar()+xlab("Cut")+ylab("Count")+
ggtitle("Barplot showing count/frequency of cut ")+geom_text(stat="count",aes(label=..count..),
vjust=-0.2)+ylim(0,max(diamonds$cut)*1.05)
ggplotly(g)
library(datasets)
library(ggplot2)
library(plotly)
data(diamonds)
g<-ggplot(diamonds,aes(x=cut,fill=cut))+ geom_bar()+xlab("Cut")+ylab("Count")+
ggtitle("Barplot showing count/frequency of cut ")+geom_text(stat="count",aes(label=..count..),
vjust=-0.2)+ylim(0,max(diamonds$cut)*1.1)
ggplotly(g)
library(datasets)
library(ggplot2)
library(plotly)
data(diamonds)
g<-ggplot(diamonds,aes(x=cut,fill=cut))+ geom_bar()+xlab("Cut")+ylab("Count")+
ggtitle("Barplot showing count/frequency of cut ")+geom_text(stat="count",aes(label=..count..),
vjust=-0.2)
ggplotly(g)
library(gcookbook)
library(ggplot2)
library(plotly)
library(plyr) # needed for desc()
library(gridExtra)
data(cabbage_exp)
#placing the label in the middle of each stacked bar
ce<-arrange(cabbage_exp,Date,Cultivar)
#calculate y position placing it in the middle
ce<-ddply(ce,"Date",transform,label_y=cumsum(Weight)-0.5*Weight)
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar))+geom_bar(stat="identity",color="black")+
geom_text(aes(y=label_y,label=paste(format(Weight,nsmall=2),"kg")),size=4)+
guides(fill=guide_legend(reverse=TRUE))+scale_fill_brewer(palette="Pastel1")
