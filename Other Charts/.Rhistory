tinytex::tlmgr_update()
options(tinytex.verbose = TRUE)
options(tinytex.verbose = TRUE)
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
data(worldpop)
glimpse(worldpop)
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
data(worldpop)
glimpse(worldpop)
g<-ggplot(worldpop, aes(x=Year, y=Population)) + geom_line() + geom_point()
ggplotly(g)
# Same with a log y-axis
g1<-ggplot(worldpop, aes(x=Year, y=Population)) + geom_line() + geom_point() + scale_y_log10()
ggplotly(g1)
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
data(worldpop)
glimpse(worldpop)
g<-ggplot(worldpop, aes(x=Year, y=Population)) + geom_line() + geom_point()
ggplotly(g)
# Same with a log y-axis
g1<-ggplot(worldpop, aes(x=Year, y=Population)) + geom_line() + geom_point() + scale_y_log10()
ggplotly(g1)
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
data(worldpop)
glimpse(worldpop)
g<-ggplot(worldpop, aes(x=Year, y=Population)) + geom_line() + geom_point()
ggplotly(g)
# Same with a log y-axis
g1<-ggplot(worldpop, aes(x=Year, y=Population)) + geom_line() + geom_point() + scale_y_log10()
ggplotly(g1)
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
data(worldpop)
glimpse(worldpop)
#convert year to a factor and introduce group=1
Year<-as.factor(worldpop$Year)
g<-ggplot(worldpop, aes(x=Year, y=Population, group=1)) + geom_line(color="red") + geom_point()
ggplotly(g)
# Same with a log y-axis
g1<-ggplot(worldpop, aes(x=Year, y=Population, group=1)) + geom_line() + geom_point() + scale_y_log10()
ggplotly(g1)
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
data(worldpop)
#convert year to a factor and introduce group=1
Year<-as.factor(worldpop$Year)
g<-ggplot(worldpop, aes(x=Year, y=Population, group=1)) + geom_line(color="red") + geom_point()
ggplotly(g)
# Same with a log y-axis
g1<-ggplot(worldpop, aes(x=Year, y=Population, group=1)) + geom_line(color="blue") + geom_point() + scale_y_log10()
ggplotly(g1)
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
data(worldpop)
#convert year to a factor and introduce group=1
Year<-as.factor(worldpop$Year)
g<-ggplot(worldpop, aes(x=Year, y=Population, group=1)) + geom_line(color="red") + geom_point() +
xlab("Year") + ylab("Population") + ggtitle("Line Graph of World Population")
ggplotly(g)
# Same with a log y-axis
g1<-ggplot(worldpop, aes(x=Year, y=Population, group=1)) + geom_line(color="blue") + geom_point() + scale_y_log10()
ggplotly(g1)
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
data(ToothGrowth)
str(ToothGrowth)
# Load plyr so we can use ddply() to create the example data set
library(plyr)
# Summarize the ToothGrowth data
tg <- ddply(ToothGrowth, c("supp", "dose"), summarise, length=mean(len))
# Map supp to colour
g1<-ggplot(tg, aes(x=dose, y=length, colour=supp)) + geom_line()
ggplotly(g1)
# Map supp to linetype
g2<-ggplot(tg, aes(x=dose, y=length, linetype=supp)) + geom_line()
ggplotly(g2)
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
data(ToothGrowth)
str(ToothGrowth)
# Load plyr so we can use ddply() to create the example data set
library(plyr)
# Summarize the ToothGrowth data
tg <- ddply(ToothGrowth, c("supp", "dose"), summarise, length=mean(len))
# Map supp to colour
g1<-ggplot(tg, aes(x=dose, y=length, colour=supp)) + geom_line()
ggplotly(g1)
# Map supp to linetype
g2<-ggplot(tg, aes(x=dose, y=length, linetype=supp)) + geom_line()
ggplotly(g2)
grid.arrange(g1,g2,ncol=2)
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
data(ToothGrowth)
# Load plyr so we can use ddply() to create the example data set
library(plyr)
# Summarize the ToothGrowth data
tg <- ddply(ToothGrowth, c("supp", "dose"), summarise, length=mean(len))
g<-ggplot(tg, aes(x=factor(dose), y=length, colour=supp, group=supp)) + geom_line()
ggplotly(g)
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
data(ToothGrowth)
# Load plyr so we can use ddply() to create the example data set
library(plyr)
# Summarize the ToothGrowth data
tg <- ddply(ToothGrowth, c("supp", "dose"), summarise, length=mean(len))
ggplot(tg, aes(x=dose, y=length)) + geom_line()
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
data(ToothGrowth)
# Load plyr so we can use ddply() to create the example data set
library(plyr)
# Summarize the ToothGrowth data
tg <- ddply(ToothGrowth, c("supp", "dose"), summarise, length=mean(len))
g1<-ggplot(tg, aes(x=dose, y=length, shape=supp)) + geom_line() +
geom_point(size=4) # Make the points a little larger
ggplotly(g1)
g2<-ggplot(tg, aes(x=dose, y=length, fill=supp)) + geom_line() +
geom_point(size=4, shape=21) # Also use a point with a color fill
ggplotly(g2)
#employ gridExtra package
grid.arrange(g1,g2,ncol=2)
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
data(ToothGrowth)
# Load plyr so we can use ddply() to create the example data set
library(plyr)
# Summarize the ToothGrowth data
tg <- ddply(ToothGrowth, c("supp", "dose"), summarise, length=mean(len))
g<-ggplot(tg, aes(x=dose, y=length, shape=supp)) +
geom_line(position=position_dodge(0.2)) + # Dodge lines by 0.2
geom_point(position=position_dodge(0.2), size=4) # Dodge points by 0.2
ggplotly(g)
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
data(BOD)
ggplot(BOD, aes(x=Time, y=demand)) +
geom_line(linetype="dashed", size=1, colour="blue")
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
data(BOD)
str(BOD)
ggplot(BOD, aes(x=Time, y=demand)) +
geom_line(linetype="dashed", size=1, colour="blue")
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
data(BOD)
str(BOD)
g1<-ggplot(BOD, aes(x=Time, y=demand)) +
geom_line(linetype="dashed", size=1, colour="blue")
ggplotly(g1)
g2<-ggplot(BOD, aes(x=factor(Time), y=demand,group=1)) +
geom_line(linetype="dashed", size=1, colour="blue")
ggplotly(g2)
grid.arrange(g1,g2,ncol=2)
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
data(ToothGrowth)
# Load plyr so we can use ddply() to create the example data set
library(plyr)
# Summarize the ToothGrowth data
tg <- ddply(ToothGrowth, c("supp", "dose"), summarise, length=mean(len))
g<-ggplot(tg, aes(x=dose, y=length, colour=supp)) +
geom_line() + scale_colour_brewer(palette="Set1")
ggplotly(g)
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
data(ToothGrowth)
# Load plyr so we can use ddply() to create the example data set
library(plyr)
# Summarize the ToothGrowth data
tg <- ddply(ToothGrowth, c("supp", "dose"), summarise, length=mean(len))
# If both lines have the same properties, you need to specify a variable to
# use for grouping
g1<-ggplot(tg, aes(x=dose, y=length, group=supp)) +
geom_line(colour="darkgreen", size=1.5)
ggplotly(g1)
# Since supp is mapped to colour, it will automatically be used for grouping
g2<-ggplot(tg, aes(x=dose, y=length, colour=supp)) +
geom_line(linetype="dashed") +
geom_point(shape=22, size=3, fill="white")
ggplotly(g2)
#apply gridExtra package
grid.arrange(g1,g2,ncol=2)
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
data(ToothGrowth)
# Load plyr so we can use ddply() to create the example data set
library(plyr)
# Summarize the ToothGrowth data
tg <- ddply(ToothGrowth, c("supp", "dose"), summarise, length=mean(len))
# If both lines have the same properties, you need to specify a variable to
# use for grouping
g1<-ggplot(tg, aes(x=dose, y=length, group=supp)) +
geom_line(colour="darkgreen", size=1.5)
ggplotly(g1)
# Since supp is mapped to colour, it will automatically be used for grouping
g2<-ggplot(tg, aes(x=dose, y=length, colour=supp)) +
geom_line(linetype="dashed") +
geom_point(shape=22, size=3, fill="white")
ggplotly(g2)
#apply gridExtra package
grid.arrange(g1,g2,ncol=2)
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
data(BOD)
ggplot(BOD, aes(x=Time, y=demand)) +
geom_line() +
geom_point(size=4, shape=22, colour="darkred", fill="pink")
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
data(BOD)
g<-ggplot(BOD, aes(x=Time, y=demand)) +
geom_line() +
geom_point(size=4, shape=22, colour="darkred", fill="pink")
ggplotly(g)
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
data(BOD)
g<-ggplot(BOD, aes(x=Time, y=demand)) +
geom_line() +
geom_point(size=4, shape=21, fill="white")
ggplotly(g)
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
data(BOD)
g<-ggplot(BOD, aes(x=Time, y=demand)) +
geom_line() +
geom_point(size=4, shape=21, fill="white")
ggplotly(g)
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
data(ToothGrowth)
# Load plyr so we can use ddply() to create the example data set
library(plyr)
# Summarize the ToothGrowth data
tg <- ddply(ToothGrowth, c("supp", "dose"), summarise, length=mean(len))
# Save the position_dodge specification because we'll use it multiple times
pd <- position_dodge(0.2)
g<-ggplot(tg, aes(x=dose, y=length, fill=supp)) +
geom_line(position=pd) +
geom_point(shape=21, size=3, position=pd) +
scale_fill_manual(values=c("black","white"))
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
data(ToothGrowth)
# Load plyr so we can use ddply() to create the example data set
library(plyr)
# Summarize the ToothGrowth data
tg <- ddply(ToothGrowth, c("supp", "dose"), summarise, length=mean(len))
# Save the position_dodge specification because we'll use it multiple times
pd <- position_dodge(0.2)
g<-ggplot(tg, aes(x=dose, y=length, fill=supp)) +
geom_line(position=pd) +
geom_point(shape=21, size=3, position=pd) +
scale_fill_manual(values=c("black","white"))
ggplotly(g)
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
data(sunspotyear)
# Convert the sunspot.year data set into a data frame for this example
sunspotyear <- data.frame(
Year = as.numeric(time(sunspot.year)),
Sunspots = as.numeric(sunspot.year)
)
g<-ggplot(sunspotyear, aes(x=Year, y=Sunspots)) + geom_area()
ggplot(g)
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
data(sunspotyear)
# Convert the sunspot.year data set into a data frame for this example
sunspotyear <- data.frame(
Year = as.numeric(time(sunspot.year)),
Sunspots = as.numeric(sunspot.year)
)
g<-ggplot(sunspotyear, aes(x=Year, y=Sunspots)) + geom_area()
ggplotly(g)
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
data(sunspotyear)
# Convert the sunspot.year data set into a data frame for this example
sunspotyear <- data.frame(
Year = as.numeric(time(sunspot.year)),
Sunspots = as.numeric(sunspot.year)
)
g<-ggplot(sunspotyear, aes(x=Year, y=Sunspots)) +
geom_area(colour="black", fill="blue", alpha=.2)
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
data(sunspotyear)
# Convert the sunspot.year data set into a data frame for this example
sunspotyear <- data.frame(
Year = as.numeric(time(sunspot.year)),
Sunspots = as.numeric(sunspot.year)
)
g<-ggplot(sunspotyear, aes(x=Year, y=Sunspots)) +
geom_area(colour="black", fill="blue", alpha=.2)
ggplotly(g)
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
data(sunspotyear)
# Convert the sunspot.year data set into a data frame for this example
sunspotyear <- data.frame(
Year = as.numeric(time(sunspot.year)),
Sunspots = as.numeric(sunspot.year)
)
g<-ggplot(sunspotyear, aes(x=Year, y=Sunspots)) +
geom_area(fill="blue", alpha=.2) +
geom_line()
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
data(sunspotyear)
# Convert the sunspot.year data set into a data frame for this example
sunspotyear <- data.frame(
Year = as.numeric(time(sunspot.year)),
Sunspots = as.numeric(sunspot.year)
)
g<-ggplot(sunspotyear, aes(x=Year, y=Sunspots)) +
geom_area(fill="blue", alpha=.2) +
geom_line()
ggplotly(g)
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
data(uspopage)
g<-ggplot(uspopage, aes(x=Year, y=Thousands, fill=AgeGroup)) + geom_area()
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
data(uspopage)
g<-ggplot(uspopage, aes(x=Year, y=Thousands, fill=AgeGroup)) + geom_area()
ggplotly(g)
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
data(uspopage)
ggplot(uspopage, aes(x=Year, y=Thousands, fill=AgeGroup)) +
geom_area(colour="black", size=.2, alpha=.4) +
scale_fill_brewer(palette="Blues", breaks=rev(levels(uspopage$AgeGroup)))
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
data(uspopage)
g<-ggplot(uspopage, aes(x=Year, y=Thousands, fill=AgeGroup)) +
geom_area(colour="black", size=.2, alpha=.4) +
scale_fill_brewer(palette="Blues", breaks=rev(levels(uspopage$AgeGroup)))
ggplotly(g)
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
data(uspopage)
library(plyr) # For the desc() function
g<-ggplot(uspopage, aes(x=Year, y=Thousands, fill=AgeGroup, order=desc(AgeGroup))) +
geom_area(colour="black", size=.2, alpha=.4) +
scale_fill_brewer(palette="Blues")
ggplotly(g)
library(gcookbook) # For the data set
library(ggplot2)
library(plotly)
library(dplyr)
library(gridExtra)
data(uspopage)
ggplot(uspopage, aes(x=Year, y=Thousands, fill=AgeGroup, order=desc(AgeGroup))) +
geom_area(colour=NA, alpha=.4) +
scale_fill_brewer(palette="Blues") +
geom_line(position="stack", size=.2)
